' Gambas class file

Event llegada(p As Planeta, f As Flota)

Public IconoNave As Image = Image.Load("naves/republica/XWing-icon.png") 'iconos iniciales de la flota
Public IconoNaveFlota As Image = Image.Load("naves/republica/XWing-icon-flota.png") 'iconos iniciales de la flota
Public IconoNaveFlotaGrande As Image = Image.Load("naves/republica/corveta.png") 'iconos iniciales de la flota

Property Propietario As String 'a quien pertenece la flota
Private hpropietario As String

Property origen As Planeta
Private horigen As Planeta

Property destino As Planeta
Private hdestino As Planeta

Public naves As Integer  'numero de naves que la forman

Property velocidad As Integer 'velocidad de la flota
Private hvelocidad As Integer = MGlobales.VelocidadFlotaRepublica 'inicialmente, en la IA se redefine la velocidad

Public activa As Boolean = False '' variable Bandera que indica cuando se puede dibujar (si tiene definido el planeta destino, si se dibuja, si solo tiene definido el planeta origen no se dibuja)

'datos de la ruta donde tiene que ir la flota
Private hdistancia As Single
Private hincrementoX As Single
Private hincrementoY As Single

Private posX As Integer
Private posY As Integer

Private paso As Single 'numero de pasos para llegar al planeta segun mi velocidad
Private hcontador As Integer = 0 'numero de pasos actualmente

Private Function origen_Read() As Planeta

  Return horigen

End

Private Sub origen_Write(Value As Planeta)

  horigen = value

End

Private Function destino_Read() As Planeta

  Return hdestino

End

Private Sub destino_Write(Value As Planeta)

  Dim incre As Single

  hdestino = value
  'calculo distancia...
  hdistancia = EcuacionesRecta.distanciaEntreDosPuntos(horigen.Posicion.x, horigen.Posicion.y, hdestino.Posicion.x, hdestino.Posicion.y)
  'calculo incremento
  incre = hdistancia / Me.velocidad
  hincrementoX = (hdestino.Posicion.x - horigen.Posicion.X) / incre
  hincrementoY = (hdestino.Posicion.y - horigen.Posicion.y) / incre
  paso = incre
  'posiciono flota
  posX = horigen.Posicion.x + 12

  posY = horigen.Posicion.y + 12

End

Public Sub dibuja()

  If activa = True Then
    ' Si esta activa (definido origen y destino), se puede dibujar la flota
    'dibuja trazado ruta

    Paint.LineWidth = 1
    Paint.LineCap = Paint.LineCapButt
    Paint.Dash = [3.0, 1.0]  'dibuja una linea punteada
    Paint.DashOffset = -5

    If Me.Propietario = "N/A" Then
      Paint.Brush = Paint.Color(Color.Black) 'color de la linea
    Else
      Paint.Brush = Paint.Color(Color.red)
    Endif

    Paint.MoveTo(horigen.Posicion.x + 25, horigen.Posicion.y + 25)
    Paint.LineTo(hdestino.Posicion.x + 25, hdestino.Posicion.y + 25)
    Paint.stroke

    '  Print "dibujo icono de flota..."
    Select Case Me.naves
      Case 1 To 5
        Paint.DrawImage(IconoNave, posx, posy)
      Case 6 To 15
        Paint.DrawImage(IconoNaveFlota, posx, posy)
      Case Else
        Paint.DrawImage(IconoNaveFlotaGrande, posx, posy)
    End Select
    Paint.Stroke

    'dibujo datos de la flota: numero de naves que forma la flota
    Paint.Font.Name = "Nimbus Mono L"
    Paint.Font.Size = 10
    Paint.Font.Bold = False
    Draw.RichText(Me.naves, posX - 10, posY - 15)

    Paint.Stroke

  Endif

End

Public Sub avance()

  posx += hincrementoX
  posy += hincrementoy
  hcontador += 1
  If paso < hcontador Then
    'he llegado a mi destino
    Raise llegada(hdestino, Me)
    activa = False

  Endif

End

Private Sub velocidad_Write(Value As Integer)

  hvelocidad = value
  'recalculo del incremento

  If hdistancia <> 0 Then

    paso = hdistancia / Me.velocidad
    hincrementoX = (hdestino.Posicion.x - horigen.Posicion.X) / (hdistancia / Me.velocidad)
    hincrementoY = (hdestino.Posicion.y - horigen.Posicion.y) / (hdistancia / Me.velocidad)
  Endif

End

Private Function Propietario_Read() As String

  Return hpropietario

End

Private Sub Propietario_Write(Value As String)

  hpropietario = value

End

Private Function velocidad_Read() As Integer

  Return hvelocidad

End
